# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      # - uses: actions/checkout@v2
      # - name: Set up JDK 11
      #   uses: actions/setup-java@v2
      #   with:
      #     java-version: '11'
      #     distribution: 'adopt'
      #     cache: gradle

      

      # - name: Build with Gradle
      #   run: ./gradlew build

      # - name: Build with Gradle
      #   uses: gradle/gradle-build-action@4137be6a8bf7d7133955359dbd952c0ca73b1021
      #   with:
      #     arguments: build

      - uses: actions/checkout@master

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew


      - name: Validate Gradle wrapper  
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      # - name: Run the Gradle package task
      #   run: ./gradlew -b ci.gradle package


  send-slack-msg: 
    runs-on: ubuntu-latest   
    steps:  
      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.16.0
        with:
          channel-id: C02T5999HLN 
          slack-message: 'posting from a github action!'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      # - name: Create JIRA Issue
      #   id: create
      #   uses: atlassian/gajira-create@master
      #   with:
      #     project: GA
      #     issuetype: Build
      #     summary: |
      #       Build completed for ${{ github.repository }}
      #     description: |
      #       Compare branch

      # - name: Log created issue
      #   run: echo "Issue ${{ steps.create.outputs.issue }} was created"
        
      # - name: Run Snyk to check Docker image for vulnerabilities
      #   uses: snyk/actions/docker@master
      #   continue-on-error: true
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      #   with:
      #     image: msuryawanshi/connector:v1.1
      #     args: --file=snyk.sarif

      # - name: gatther
      #   uses: garethr/snyk-to-sarif@master

      # - name: upload
      #   uses: actions/upload-artifact@v2  
      #   with:
      #     name: SARIF 
      #     path: snyk.sarif


      # - name: upload Snyk scan SARIF report
      #   uses: github/codeql-action/upload-sarif@v1
      #   with:
      #     sarif_file: snyk.sarif






      

      # try out snyk
      # - name: Run Snyk to check for vulnerabilities
      #   uses: snyk/actions/gradle-jdk11@master
      #   continue-on-error: true # To make sure that SARIF upload gets called
      #   env:
      #    SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      #   with:
      #     args: --sarif-file-output=snyk.sarif
      #     json: true

      # # - uses: garethr/snyk-to-sarif@master
      # # - uses: actions/upload-artifact@v2  
      # #   with:
      # #     name: SARIF 
      # #     path: snyk.sarif

      # - name: Upload result to GitHub Code Scanning
      #   uses: github/codeql-action/upload-sarif@v1
      #   with:
      #     sarif_file: snyk.sarif



