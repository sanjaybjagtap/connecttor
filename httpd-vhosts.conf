# Virtual Hosts
#
# Required modules: mod_log_config

# If you want to maintain multiple domains/hostnames on your
# machine you can setup VirtualHost containers for them. Most configurations
# use only name-based virtual hosts so the server doesn't need to worry about
# IP addresses. This is indicated by the asterisks in the directives below.
#
# Please see the documentation at 
# <URL:http://httpd.apache.org/docs/2.4/vhosts/>
# for further details before you try to setup virtual hosts.
#
# You may use the command line option '-S' to verify your virtual host
# configuration.

#
# VirtualHost example:
# Almost any Apache directive may go into a VirtualHost container.
# The first VirtualHost section is used for all requests that do not
# match a ServerName or ServerAlias in any <VirtualHost> block.
#
#<VirtualHost *:80>
#    ServerAdmin webmaster@dummy-host.example.com
#    DocumentRoot "${SRVROOT}/docs/dummy-host.example.com"
#    ServerName dummy-host.example.com
#    ServerAlias www.dummy-host.example.com
#    ErrorLog "logs/dummy-host.example.com-error.log"
#    CustomLog "logs/dummy-host.example.com-access.log" common
#</VirtualHost>

#<VirtualHost *:80>
#    ServerAdmin webmaster@dummy-host2.example.com
#    DocumentRoot "${SRVROOT}/docs/dummy-host2.example.com"
#    ServerName dummy-host2.example.com
#    ErrorLog "logs/dummy-host2.example.com-error.log"
#    CustomLog "logs/dummy-host2.example.com-access.log" common
#</VirtualHost>

<VirtualHost *:7005>
    ServerName localhost1
    ServerAlias DNFPoc
    ErrorLog "logs/dnf-error.log"
    CustomLog "logs/dnf-access.log" common
	Header add Set-Cookie "ROUTEID=.%{BALANCER_WORKER_ROUTE}e; path=/" env=BALANCER_ROUTE_CHANGED
    ProxyPass / balancer://backend-cluster/
    ProxyPassReverse / balancer://backend-cluster/
	
	LogLevel info
	
	RewriteEngine on
	RewriteCond %{HTTP:UPGRADE} ^websocket$ [NC]
	RewriteCond %{HTTP:CONNECTION} ^Upgrade$ [NC]
	RewriteRule .* balancer://backend-cluster-ws%{REQUEST_URI} [P]
	
	SSLProxyEngine on
	SSLProxyVerify none
	SSLProxyCheckPeerCN off
	SSLProxyCheckPeerName off
	
	<Proxy balancer://backend-cluster>
		ProxySet stickysession=ROUTEID
		BalancerMember http://localhost:5001
		#BalancerMember http://localhost:5002
		#BalancerMember http://localhost:5003
	</Proxy>
	
	<Proxy balancer://backend-cluster-ws>
		BalancerMember ws://localhost:5001
		BalancerMember ws://localhost:5002
		BalancerMember ws://localhost:5003
	</Proxy>

	ProxyRequests off
	
</VirtualHost>

<Location "/balancer-manager">
    SetHandler balancer-manager
    Require all granted
</Location>



